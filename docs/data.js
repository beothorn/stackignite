var executionMetadata = "<p>Flags: []</p><p>Output: '/tmp/1700173022387_snap'</p><p>Excludes: [[Ljava.lang.String;@2b05039f]</p><p>Filters: []</p>";
var data = [[
    {
        "thread": "InPlaceQuickSort", "snapshotTime": 1700173023918, "span": {
            "name": "InPlaceQuickSortRoot", "method": "InPlaceQuickSortRoot", "entryTime": 1700173023850, "exitTime": -1, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "children": [{
                "name": "InplaceQuickSort.sort(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]", "method": "sort", "entryTime": 1700173023850, "exitTime": 1700173023853, "value": 3, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }, "children": [{ "name": "Common.copyArray(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) => int[] [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int[]", "value": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" }], "return": { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                    , {
                        "name": "InplaceQuickSort.sort(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 0, int = 14) => void", "method": "sort", "entryTime": 1700173023850, "exitTime": 1700173023853, "value": 3, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "0" }, { "type": "int", "value": "14" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 14, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Integer 6", "method": "getPivotAt", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Integer", "value": "6" } }
                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 6, int = 0, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Integer 0", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "0" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Integer", "value": "0" } }
                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 6, int = 14, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Integer 14", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "14" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Integer", "value": "14" } }
                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 6, int = 1, int[] = [6, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 10]) => Integer 1", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[6, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 10]" }], "return": { "type": "Integer", "value": "1" } }
                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 6, int = 13, int[] = [6, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 10]) => Integer 12", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "13" }, { "type": "int[]", "value": "[6, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 10]" }], "return": { "type": "Integer", "value": "12" } }
                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 6, int = 2, int[] = [6, 2, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 14, 13, 10]) => Integer 2", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "2" }, { "type": "int[]", "value": "[6, 2, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 14, 13, 10]" }], "return": { "type": "Integer", "value": "2" } }
                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 6, int = 11, int[] = [6, 2, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 14, 13, 10]) => Integer 11", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[6, 2, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 14, 13, 10]" }], "return": { "type": "Integer", "value": "11" } }
                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 6, int = 3, int[] = [6, 2, 4, 11, 8, 5, 15, 12, 1, 9, 3, 7, 14, 13, 10]) => Integer 3", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[6, 2, 4, 11, 8, 5, 15, 12, 1, 9, 3, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "3" } }
                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 6, int = 10, int[] = [6, 2, 4, 11, 8, 5, 15, 12, 1, 9, 3, 7, 14, 13, 10]) => Integer 10", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "10" }, { "type": "int[]", "value": "[6, 2, 4, 11, 8, 5, 15, 12, 1, 9, 3, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "10" } }
                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 6, int = 4, int[] = [6, 2, 4, 3, 8, 5, 15, 12, 1, 9, 11, 7, 14, 13, 10]) => Integer 4", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "4" }, { "type": "int[]", "value": "[6, 2, 4, 3, 8, 5, 15, 12, 1, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "4" } }
                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 6, int = 9, int[] = [6, 2, 4, 3, 8, 5, 15, 12, 1, 9, 11, 7, 14, 13, 10]) => Integer 8", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "9" }, { "type": "int[]", "value": "[6, 2, 4, 3, 8, 5, 15, 12, 1, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "8" } }
                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 6, int = 5, int[] = [6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 6", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "5" }, { "type": "int[]", "value": "[6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "6" } }
                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 6, int = 7, int[] = [6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 5", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "5" } }
                            , {
                                "name": "InplaceQuickSort.sort(int[] = [6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10], int = 0, int = 5) => void", "method": "sort", "entryTime": 1700173023850, "exitTime": 1700173023851, "value": 1, "arguments": [{ "type": "int[]", "value": "[6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }, { "type": "int", "value": "0" }, { "type": "int", "value": "5" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 5, int[] = [6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 5", "method": "getPivotAt", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "5" } }
                                    , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 5, int = 0, int[] = [6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 0", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "0" }, { "type": "int[]", "value": "[6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "0" } }
                                    , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 5, int = 5, int[] = [6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 5", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "5" }, { "type": "int[]", "value": "[6, 2, 4, 3, 1, 5, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "5" } }
                                    , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 5, int = 1, int[] = [5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 5", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "5" } }
                                    , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 5, int = 4, int[] = [5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 4", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "4" }, { "type": "int[]", "value": "[5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "4" } }
                                    , {
                                        "name": "InplaceQuickSort.sort(int[] = [5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10], int = 0, int = 4) => void", "method": "sort", "entryTime": 1700173023850, "exitTime": 1700173023851, "value": 1, "arguments": [{ "type": "int[]", "value": "[5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }, { "type": "int", "value": "0" }, { "type": "int", "value": "4" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 4, int[] = [5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 1", "method": "getPivotAt", "entryTime": 1700173023850, "exitTime": 1700173023850, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "1" } }
                                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 1, int = 0, int[] = [5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 0", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int[]", "value": "[5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "0" } }
                                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 1, int = 4, int[] = [5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 4", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int", "value": "4" }, { "type": "int[]", "value": "[5, 2, 4, 3, 1, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "4" } }
                                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 1, int = 1, int[] = [1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 1", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "1" } }
                                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 1, int = 3, int[] = [1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 0", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "0" } }
                                            , {
                                                "name": "InplaceQuickSort.sort(int[] = [1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10], int = 1, int = 4) => void", "method": "sort", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }, { "type": "int", "value": "1" }, { "type": "int", "value": "4" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 4, int[] = [1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 5", "method": "getPivotAt", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "5" } }
                                                    , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 5, int = 1, int[] = [1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 4", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "4" } }
                                                    , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 5, int = 4, int[] = [1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 4", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "4" }, { "type": "int[]", "value": "[1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "4" } }
                                                    , {
                                                        "name": "InplaceQuickSort.sort(int[] = [1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10], int = 1, int = 3) => void", "method": "sort", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 3, int[] = [1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 3", "method": "getPivotAt", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "3" } }
                                                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 3, int = 1, int[] = [1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 2", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "2" } }
                                                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 3, int = 3, int[] = [1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 3", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[1, 2, 4, 3, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "3" } }
                                                            , {
                                                                "name": "InplaceQuickSort.sort(int[] = [1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10], int = 1, int = 2) => void", "method": "sort", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 2, int[] = [1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 3", "method": "getPivotAt", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "3" } }
                                                                    , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 3, int = 1, int[] = [1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 2", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "2" } }
                                                                    , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 3, int = 2, int[] = [1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 2", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int", "value": "2" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "2" } }
                                                                ]
                                                        }
                                                        ]
                                                }
                                                ]
                                        }
                                        ]
                                }
                                ]
                        }
                            , {
                                "name": "InplaceQuickSort.sort(int[] = [1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10], int = 6, int = 14) => void", "method": "sort", "entryTime": 1700173023851, "exitTime": 1700173023853, "value": 2, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }, { "type": "int", "value": "6" }, { "type": "int", "value": "14" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 14, int[] = [1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 10", "method": "getPivotAt", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "10" } }
                                    , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 10, int = 6, int[] = [1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 6", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023851, "exitTime": 1700173023851, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "6" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "6" } }
                                    , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 10, int = 14, int[] = [1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]) => Integer 14", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "14" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 15, 12, 8, 9, 11, 7, 14, 13, 10]" }], "return": { "type": "Integer", "value": "14" } }
                                    , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 10, int = 7, int[] = [1, 2, 3, 4, 5, 6, 10, 12, 8, 9, 11, 7, 14, 13, 15]) => Integer 7", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 10, 12, 8, 9, 11, 7, 14, 13, 15]" }], "return": { "type": "Integer", "value": "7" } }
                                    , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 10, int = 13, int[] = [1, 2, 3, 4, 5, 6, 10, 12, 8, 9, 11, 7, 14, 13, 15]) => Integer 11", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "13" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 10, 12, 8, 9, 11, 7, 14, 13, 15]" }], "return": { "type": "Integer", "value": "11" } }
                                    , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 10, int = 8, int[] = [1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15]) => Integer 10", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "8" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "10" } }
                                    , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 10, int = 10, int[] = [1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15]) => Integer 9", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "10" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "9" } }
                                    , {
                                        "name": "InplaceQuickSort.sort(int[] = [1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15], int = 6, int = 9) => void", "method": "sort", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15]" }, { "type": "int", "value": "6" }, { "type": "int", "value": "9" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 9, int[] = [1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15]) => Integer 9", "method": "getPivotAt", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "9" } }
                                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 9, int = 6, int[] = [1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15]) => Integer 6", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "6" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "6" } }
                                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 9, int = 9, int[] = [1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15]) => Integer 9", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "9" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "9" } }
                                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 9, int = 7, int[] = [1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15]) => Integer 9", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "9" } }
                                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 9, int = 8, int[] = [1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15]) => Integer 8", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "8" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "8" } }
                                            , {
                                                "name": "InplaceQuickSort.sort(int[] = [1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15], int = 6, int = 8) => void", "method": "sort", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15]" }, { "type": "int", "value": "6" }, { "type": "int", "value": "8" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 8, int[] = [1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15]) => Integer 8", "method": "getPivotAt", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "8" } }
                                                    , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 8, int = 6, int[] = [1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15]) => Integer 6", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "6" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "6" } }
                                                    , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 8, int = 8, int[] = [1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15]) => Integer 8", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "8" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "8" } }
                                                    , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 8, int = 7, int[] = [1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15]) => Integer 8", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "8" } }
                                                    , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 8, int = 7, int[] = [1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15]) => Integer 7", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "7" } }
                                                    , {
                                                        "name": "InplaceQuickSort.sort(int[] = [1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15], int = 6, int = 7) => void", "method": "sort", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15]" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 7, int[] = [1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15]) => Integer 7", "method": "getPivotAt", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "7" } }
                                                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 7, int = 6, int[] = [1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15]) => Integer 6", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "6" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "6" } }
                                                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 7, int = 7, int[] = [1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15]) => Integer 7", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "7" } }
                                                        ]
                                                }
                                                ]
                                        }
                                        ]
                                }
                                    , {
                                        "name": "InplaceQuickSort.sort(int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15], int = 10, int = 14) => void", "method": "sort", "entryTime": 1700173023852, "exitTime": 1700173023853, "value": 1, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]" }, { "type": "int", "value": "10" }, { "type": "int", "value": "14" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 14, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]) => Integer 15", "method": "getPivotAt", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "15" } }
                                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 15, int = 10, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]) => Integer 14", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023852, "exitTime": 1700173023852, "value": 0, "arguments": [{ "type": "int", "value": "15" }, { "type": "int", "value": "10" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "14" } }
                                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 15, int = 14, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]) => Integer 14", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int", "value": "15" }, { "type": "int", "value": "14" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "14" } }
                                            , {
                                                "name": "InplaceQuickSort.sort(int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15], int = 10, int = 13) => void", "method": "sort", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]" }, { "type": "int", "value": "10" }, { "type": "int", "value": "13" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 13, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]) => Integer 13", "method": "getPivotAt", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int", "value": "13" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "13" } }
                                                    , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 13, int = 10, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]) => Integer 12", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int", "value": "13" }, { "type": "int", "value": "10" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "12" } }
                                                    , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 13, int = 13, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]) => Integer 13", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int", "value": "13" }, { "type": "int", "value": "13" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]" }], "return": { "type": "Integer", "value": "13" } }
                                                    , {
                                                        "name": "InplaceQuickSort.sort(int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], int = 10, int = 12) => void", "method": "sort", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }, { "type": "int", "value": "10" }, { "type": "int", "value": "12" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 12, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Integer 13", "method": "getPivotAt", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Integer", "value": "13" } }
                                                            , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 13, int = 10, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Integer 12", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int", "value": "13" }, { "type": "int", "value": "10" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Integer", "value": "12" } }
                                                            , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 13, int = 12, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Integer 12", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int", "value": "13" }, { "type": "int", "value": "12" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Integer", "value": "12" } }
                                                            , {
                                                                "name": "InplaceQuickSort.sort(int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], int = 10, int = 11) => void", "method": "sort", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "InplaceQuickSort.getPivotAt(int = 11, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Integer 12", "method": "getPivotAt", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Integer", "value": "12" } }
                                                                    , { "name": "InplaceQuickSort.findNextValueBiggerOrEqualThanPivotOnLeft(int = 12, int = 10, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Integer 11", "method": "findNextValueBiggerOrEqualThanPivotOnLeft", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "10" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Integer", "value": "11" } }
                                                                    , { "name": "InplaceQuickSort.findNextValueSmallerOrEqualThanPivotOnRight(int = 12, int = 11, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Integer 11", "method": "findNextValueSmallerOrEqualThanPivotOnRight", "entryTime": 1700173023853, "exitTime": 1700173023853, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Integer", "value": "11" } }
                                                                ]
                                                        }
                                                        ]
                                                }
                                                ]
                                        }
                                        ]
                                }
                                ]
                        }
                        ]
                }
                ]
            }
            ]
        }
    }, {
        "thread": "BubbleSort", "snapshotTime": 1700173023986, "span": {
            "name": "BubbleSortRoot", "method": "BubbleSortRoot", "entryTime": 1700173023815, "exitTime": -1, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "children": [{
                "name": "BubbleSort.sort(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]", "method": "sort", "entryTime": 1700173023815, "exitTime": 1700173023840, "value": 25, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }, "children": [{ "name": "Common.copyArray(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) => int[] [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023830, "exitTime": 1700173023830, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int[]", "value": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" }], "return": { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 14, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "bubbleUp", "entryTime": 1700173023830, "exitTime": 1700173023831, "value": 1, "arguments": [{ "type": "int", "value": "14" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023830, "exitTime": 1700173023830, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 14) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023830, "exitTime": 1700173023830, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "14" }], "return": { "type": "Boolean", "value": "false" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023830, "exitTime": 1700173023830, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 7) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023830, "exitTime": 1700173023830, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "7" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023830, "exitTime": 1700173023830, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 11) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023830, "exitTime": 1700173023830, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "11" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 3, int[] = [10, 7, 11, 14, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023830, "exitTime": 1700173023830, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[10, 7, 11, 14, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 8) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023830, "exitTime": 1700173023830, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "8" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 4, int[] = [10, 7, 11, 8, 14, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023830, "exitTime": 1700173023830, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[10, 7, 11, 8, 14, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 5) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023830, "exitTime": 1700173023830, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "5" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 5, int[] = [10, 7, 11, 8, 5, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023830, "exitTime": 1700173023831, "value": 1, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[10, 7, 11, 8, 5, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 15) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "15" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 6, int[] = [10, 7, 11, 8, 5, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[10, 7, 11, 8, 5, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 15, int = 12) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "15" }, { "type": "int", "value": "12" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 7, int[] = [10, 7, 11, 8, 5, 14, 12, 15, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[10, 7, 11, 8, 5, 14, 12, 15, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 15, int = 1) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "15" }, { "type": "int", "value": "1" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 8, int[] = [10, 7, 11, 8, 5, 14, 12, 1, 15, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[10, 7, 11, 8, 5, 14, 12, 1, 15, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 15, int = 9) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "15" }, { "type": "int", "value": "9" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 9, int[] = [10, 7, 11, 8, 5, 14, 12, 1, 9, 15, 3, 4, 2, 13, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[10, 7, 11, 8, 5, 14, 12, 1, 9, 15, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 15, int = 3) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "15" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 10, int[] = [10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 15, 4, 2, 13, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int[]", "value": "[10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 15, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 15, int = 4) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "15" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 11, int[] = [10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 4, 15, 2, 13, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int[]", "value": "[10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 4, 15, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 15, int = 2) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "15" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 12, int[] = [10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 15, 13, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int[]", "value": "[10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 15, int = 13) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "15" }, { "type": "int", "value": "13" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 13, int[] = [10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 13, 15, 6]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "13" }, { "type": "int[]", "value": "[10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 13, 15, 6]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 15, int = 6) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "15" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                        ]
                }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 13, int[] = [10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]) => Boolean true", "method": "bubbleUp", "entryTime": 1700173023831, "exitTime": 1700173023833, "value": 2, "arguments": [{ "type": "int", "value": "13" }, { "type": "int[]", "value": "[10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[10, 7, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 7) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023831, "exitTime": 1700173023831, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "7" }], "return": { "type": "Boolean", "value": "true" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [7, 10, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023831, "exitTime": 1700173023832, "value": 1, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[7, 10, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 11) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "11" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [7, 10, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[7, 10, 11, 8, 5, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 11, int = 8) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "8" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 3, int[] = [7, 10, 8, 11, 5, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[7, 10, 8, 11, 5, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 11, int = 5) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "5" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 4, int[] = [7, 10, 8, 5, 11, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 11, int = 14) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "14" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 5, int[] = [7, 10, 8, 5, 11, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 14, 12, 1, 9, 3, 4, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 12) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "12" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 6, int[] = [7, 10, 8, 5, 11, 12, 14, 1, 9, 3, 4, 2, 13, 6, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 12, 14, 1, 9, 3, 4, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 1) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "1" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 7, int[] = [7, 10, 8, 5, 11, 12, 1, 14, 9, 3, 4, 2, 13, 6, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 12, 1, 14, 9, 3, 4, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 9) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "9" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 8, int[] = [7, 10, 8, 5, 11, 12, 1, 9, 14, 3, 4, 2, 13, 6, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 12, 1, 9, 14, 3, 4, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 3) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 9, int[] = [7, 10, 8, 5, 11, 12, 1, 9, 3, 14, 4, 2, 13, 6, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 12, 1, 9, 3, 14, 4, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 4) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 10, int[] = [7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 14, 2, 13, 6, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 14, 2, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 2) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 11, int[] = [7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 2, 14, 13, 6, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 2, 14, 13, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 13) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023832, "exitTime": 1700173023832, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "13" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 12, int[] = [7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 2, 13, 14, 6, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 2, 13, 14, 6, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 14, int = 6) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                        ]
                }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 12, int[] = [7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]) => Boolean true", "method": "bubbleUp", "entryTime": 1700173023833, "exitTime": 1700173023834, "value": 1, "arguments": [{ "type": "int", "value": "12" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 10) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "10" }], "return": { "type": "Boolean", "value": "false" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[7, 10, 8, 5, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 8) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "8" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [7, 8, 10, 5, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[7, 8, 10, 5, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 5) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "5" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 3, int[] = [7, 8, 5, 10, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 11) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "11" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 4, int[] = [7, 8, 5, 10, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 11, int = 12) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "12" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 5, int[] = [7, 8, 5, 10, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 12, 1, 9, 3, 4, 2, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 12, int = 1) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "1" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 6, int[] = [7, 8, 5, 10, 11, 1, 12, 9, 3, 4, 2, 13, 6, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 1, 12, 9, 3, 4, 2, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 12, int = 9) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "9" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 7, int[] = [7, 8, 5, 10, 11, 1, 9, 12, 3, 4, 2, 13, 6, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 1, 9, 12, 3, 4, 2, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 12, int = 3) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023833, "exitTime": 1700173023833, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 8, int[] = [7, 8, 5, 10, 11, 1, 9, 3, 12, 4, 2, 13, 6, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 1, 9, 3, 12, 4, 2, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 12, int = 4) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 9, int[] = [7, 8, 5, 10, 11, 1, 9, 3, 4, 12, 2, 13, 6, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 1, 9, 3, 4, 12, 2, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 12, int = 2) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 10, int[] = [7, 8, 5, 10, 11, 1, 9, 3, 4, 2, 12, 13, 6, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 1, 9, 3, 4, 2, 12, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 12, int = 13) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "13" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 11, int[] = [7, 8, 5, 10, 11, 1, 9, 3, 4, 2, 12, 13, 6, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 1, 9, 3, 4, 2, 12, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 13, int = 6) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "13" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                        ]
                }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 11, int[] = [7, 8, 5, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]) => Boolean true", "method": "bubbleUp", "entryTime": 1700173023834, "exitTime": 1700173023835, "value": 1, "arguments": [{ "type": "int", "value": "11" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [7, 8, 5, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 8) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "8" }], "return": { "type": "Boolean", "value": "false" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [7, 8, 5, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 8, int = 5) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "5" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [7, 5, 8, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[7, 5, 8, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 8, int = 10) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "10" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 3, int[] = [7, 5, 8, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[7, 5, 8, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 11) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "11" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 4, int[] = [7, 5, 8, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[7, 5, 8, 10, 11, 1, 9, 3, 4, 2, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 11, int = 1) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023834, "exitTime": 1700173023834, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "1" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 5, int[] = [7, 5, 8, 10, 1, 11, 9, 3, 4, 2, 12, 6, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023834, "exitTime": 1700173023835, "value": 1, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[7, 5, 8, 10, 1, 11, 9, 3, 4, 2, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 11, int = 9) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "9" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 6, int[] = [7, 5, 8, 10, 1, 9, 11, 3, 4, 2, 12, 6, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[7, 5, 8, 10, 1, 9, 11, 3, 4, 2, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 11, int = 3) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 7, int[] = [7, 5, 8, 10, 1, 9, 3, 11, 4, 2, 12, 6, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[7, 5, 8, 10, 1, 9, 3, 11, 4, 2, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 11, int = 4) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 8, int[] = [7, 5, 8, 10, 1, 9, 3, 4, 11, 2, 12, 6, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[7, 5, 8, 10, 1, 9, 3, 4, 11, 2, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 11, int = 2) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 9, int[] = [7, 5, 8, 10, 1, 9, 3, 4, 2, 11, 12, 6, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[7, 5, 8, 10, 1, 9, 3, 4, 2, 11, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 11, int = 12) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "12" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 10, int[] = [7, 5, 8, 10, 1, 9, 3, 4, 2, 11, 12, 6, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int[]", "value": "[7, 5, 8, 10, 1, 9, 3, 4, 2, 11, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 12, int = 6) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                        ]
                }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 10, int[] = [7, 5, 8, 10, 1, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]) => Boolean true", "method": "bubbleUp", "entryTime": 1700173023835, "exitTime": 1700173023836, "value": 1, "arguments": [{ "type": "int", "value": "10" }, { "type": "int[]", "value": "[7, 5, 8, 10, 1, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [7, 5, 8, 10, 1, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[7, 5, 8, 10, 1, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 5) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "5" }], "return": { "type": "Boolean", "value": "true" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [5, 7, 8, 10, 1, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[5, 7, 8, 10, 1, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 8) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "8" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [5, 7, 8, 10, 1, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[5, 7, 8, 10, 1, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 8, int = 10) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "10" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 3, int[] = [5, 7, 8, 10, 1, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[5, 7, 8, 10, 1, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 1) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "1" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 4, int[] = [5, 7, 8, 1, 10, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023835, "exitTime": 1700173023836, "value": 1, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[5, 7, 8, 1, 10, 9, 3, 4, 2, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 9) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023835, "exitTime": 1700173023835, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "9" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 5, int[] = [5, 7, 8, 1, 9, 10, 3, 4, 2, 11, 6, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[5, 7, 8, 1, 9, 10, 3, 4, 2, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 3) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 6, int[] = [5, 7, 8, 1, 9, 3, 10, 4, 2, 11, 6, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[5, 7, 8, 1, 9, 3, 10, 4, 2, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 4) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 7, int[] = [5, 7, 8, 1, 9, 3, 4, 10, 2, 11, 6, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[5, 7, 8, 1, 9, 3, 4, 10, 2, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 2) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 8, int[] = [5, 7, 8, 1, 9, 3, 4, 2, 10, 11, 6, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[5, 7, 8, 1, 9, 3, 4, 2, 10, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 11) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "11" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 9, int[] = [5, 7, 8, 1, 9, 3, 4, 2, 10, 11, 6, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[5, 7, 8, 1, 9, 3, 4, 2, 10, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 11, int = 6) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                        ]
                }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 9, int[] = [5, 7, 8, 1, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]) => Boolean true", "method": "bubbleUp", "entryTime": 1700173023836, "exitTime": 1700173023837, "value": 1, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[5, 7, 8, 1, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [5, 7, 8, 1, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[5, 7, 8, 1, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 5, int = 7) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "7" }], "return": { "type": "Boolean", "value": "false" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [5, 7, 8, 1, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[5, 7, 8, 1, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 8) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "8" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [5, 7, 8, 1, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[5, 7, 8, 1, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 8, int = 1) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "1" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 3, int[] = [5, 7, 1, 8, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[5, 7, 1, 8, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 8, int = 9) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "9" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 4, int[] = [5, 7, 1, 8, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[5, 7, 1, 8, 9, 3, 4, 2, 10, 6, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 9, int = 3) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023836, "exitTime": 1700173023836, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 5, int[] = [5, 7, 1, 8, 3, 9, 4, 2, 10, 6, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023836, "exitTime": 1700173023837, "value": 1, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[5, 7, 1, 8, 3, 9, 4, 2, 10, 6, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 9, int = 4) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 6, int[] = [5, 7, 1, 8, 3, 4, 9, 2, 10, 6, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[5, 7, 1, 8, 3, 4, 9, 2, 10, 6, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 9, int = 2) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 7, int[] = [5, 7, 1, 8, 3, 4, 2, 9, 10, 6, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[5, 7, 1, 8, 3, 4, 2, 9, 10, 6, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 9, int = 10) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "10" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 8, int[] = [5, 7, 1, 8, 3, 4, 2, 9, 10, 6, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[5, 7, 1, 8, 3, 4, 2, 9, 10, 6, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 10, int = 6) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                        ]
                }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 8, int[] = [5, 7, 1, 8, 3, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "bubbleUp", "entryTime": 1700173023837, "exitTime": 1700173023838, "value": 1, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[5, 7, 1, 8, 3, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [5, 7, 1, 8, 3, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[5, 7, 1, 8, 3, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 5, int = 7) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "7" }], "return": { "type": "Boolean", "value": "false" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [5, 7, 1, 8, 3, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[5, 7, 1, 8, 3, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 1) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "1" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [5, 1, 7, 8, 3, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[5, 1, 7, 8, 3, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 8) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "8" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 3, int[] = [5, 1, 7, 8, 3, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[5, 1, 7, 8, 3, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 8, int = 3) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 4, int[] = [5, 1, 7, 3, 8, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[5, 1, 7, 3, 8, 4, 2, 9, 6, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 8, int = 4) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 5, int[] = [5, 1, 7, 3, 4, 8, 2, 9, 6, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[5, 1, 7, 3, 4, 8, 2, 9, 6, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 8, int = 2) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 6, int[] = [5, 1, 7, 3, 4, 2, 8, 9, 6, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[5, 1, 7, 3, 4, 2, 8, 9, 6, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 8, int = 9) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023837, "exitTime": 1700173023837, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "9" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 7, int[] = [5, 1, 7, 3, 4, 2, 8, 9, 6, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[5, 1, 7, 3, 4, 2, 8, 9, 6, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 9, int = 6) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                        ]
                }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 7, int[] = [5, 1, 7, 3, 4, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "bubbleUp", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[5, 1, 7, 3, 4, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [5, 1, 7, 3, 4, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[5, 1, 7, 3, 4, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 5, int = 1) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }], "return": { "type": "Boolean", "value": "true" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [1, 5, 7, 3, 4, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[1, 5, 7, 3, 4, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 5, int = 7) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "7" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [1, 5, 7, 3, 4, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[1, 5, 7, 3, 4, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 3) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 3, int[] = [1, 5, 3, 7, 4, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[1, 5, 3, 7, 4, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 4) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 4, int[] = [1, 5, 3, 4, 7, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[1, 5, 3, 4, 7, 2, 8, 6, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 2) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 5, int[] = [1, 5, 3, 4, 2, 7, 8, 6, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[1, 5, 3, 4, 2, 7, 8, 6, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 8) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "8" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 6, int[] = [1, 5, 3, 4, 2, 7, 8, 6, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[1, 5, 3, 4, 2, 7, 8, 6, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 8, int = 6) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                        ]
                }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 6, int[] = [1, 5, 3, 4, 2, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "bubbleUp", "entryTime": 1700173023838, "exitTime": 1700173023839, "value": 1, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[1, 5, 3, 4, 2, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [1, 5, 3, 4, 2, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[1, 5, 3, 4, 2, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 1, int = 5) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023838, "exitTime": 1700173023838, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" }], "return": { "type": "Boolean", "value": "false" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [1, 5, 3, 4, 2, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[1, 5, 3, 4, 2, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 5, int = 3) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [1, 3, 5, 4, 2, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[1, 3, 5, 4, 2, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 5, int = 4) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 3, int[] = [1, 3, 4, 5, 2, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[1, 3, 4, 5, 2, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 5, int = 2) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 4, int[] = [1, 3, 4, 2, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[1, 3, 4, 2, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 5, int = 7) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "7" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 5, int[] = [1, 3, 4, 2, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[1, 3, 4, 2, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 7, int = 6) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                        ]
                }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 5, int[] = [1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "bubbleUp", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 1, int = 3) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "false" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 3, int = 4) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 4, int = 2) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 3, int[] = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 4, int = 5) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int", "value": "5" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 4, int[] = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 5, int = 6) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023839, "exitTime": 1700173023839, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                        ]
                }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 4, int[] = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "bubbleUp", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 1, int = 3) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "false" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "swapIfBiggerThanNext", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 3, int = 2) => Boolean true", "method": "isABiggerThanB", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 3, int = 4) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 3, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 4, int = 5) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int", "value": "5" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                        ]
                }
                    , {
                        "name": "BubbleSort.bubbleUp(int = 3, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "bubbleUp", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{
                            "name": "BubbleSort.swapIfBiggerThanNext(int = 0, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 1, int = 2) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "false" } }
                            ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 1, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 2, int = 3) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                            , {
                                "name": "BubbleSort.swapIfBiggerThanNext(int = 2, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "swapIfBiggerThanNext", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" }, "children": [{ "name": "BubbleSort.isABiggerThanB(int = 3, int = 4) => Boolean false", "method": "isABiggerThanB", "entryTime": 1700173023840, "exitTime": 1700173023840, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "false" } }
                                ]
                        }
                        ]
                }
                ]
            }
            ]
        }
    }, {
        "thread": "main", "snapshotTime": 1700173024003, "span": {
            "name": "mainRoot", "method": "mainRoot", "entryTime": 1700173023788, "exitTime": -1, "value": 0, "arguments": [{ "type": "Object[]", "value": "[]" }], "children": [{
                "name": "App.main(Object[] = []) => void", "method": "main", "entryTime": 1700173023788, "exitTime": 1700173023905, "value": 117, "arguments": [{ "type": "Object[]", "value": "[]" }], "return": { "type": "void", "value": "" }, "children": [{ "name": "App.runSortInThread(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], Function = com.github.beothorn.App$$Lambda$59/0x00000008401b6840@57ac5227, String = BubbleSort) => Thread Thread[BubbleSort,5,main]", "method": "runSortInThread", "entryTime": 1700173023810, "exitTime": 1700173023812, "value": 2, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "Function", "value": "com.github.beothorn.App$$Lambda$59/0x00000008401b6840@57ac5227" }, { "type": "String", "value": "BubbleSort" }], "return": { "type": "Thread", "value": "Thread[BubbleSort,5,main]" } }
                    , { "name": "App.runSortInThread(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], Function = com.github.beothorn.App$$Lambda$61/0x00000008401db040@f73dcd6, String = InPlaceQuickSort) => Thread Thread[InPlaceQuickSort,5,main]", "method": "runSortInThread", "entryTime": 1700173023849, "exitTime": 1700173023850, "value": 1, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "Function", "value": "com.github.beothorn.App$$Lambda$61/0x00000008401db040@f73dcd6" }, { "type": "String", "value": "InPlaceQuickSort" }], "return": { "type": "Thread", "value": "Thread[InPlaceQuickSort,5,main]" } }
                    , { "name": "App.runSortInThread(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], Function = com.github.beothorn.App$$Lambda$62/0x00000008401db440@39dcf4b0, String = MergeSort) => Thread Thread[MergeSort,5,main]", "method": "runSortInThread", "entryTime": 1700173023878, "exitTime": 1700173023878, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "Function", "value": "com.github.beothorn.App$$Lambda$62/0x00000008401db440@39dcf4b0" }, { "type": "String", "value": "MergeSort" }], "return": { "type": "Thread", "value": "Thread[MergeSort,5,main]" } }
                    , { "name": "App.runSortInThread(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], Function = com.github.beothorn.App$$Lambda$63/0x00000008401db840@71e5f61d, String = InsertionSort) => Thread Thread[InsertionSort,5,main]", "method": "runSortInThread", "entryTime": 1700173023900, "exitTime": 1700173023900, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "Function", "value": "com.github.beothorn.App$$Lambda$63/0x00000008401db840@71e5f61d" }, { "type": "String", "value": "InsertionSort" }], "return": { "type": "Thread", "value": "Thread[InsertionSort,5,main]" } }
                ]
            }
            ]
        }
    }, {
        "thread": "MergeSort", "snapshotTime": 1700173024003, "span": {
            "name": "MergeSortRoot", "method": "MergeSortRoot", "entryTime": 1700173023885, "exitTime": -1, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "children": [{
                "name": "MergeSort.sort(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]", "method": "sort", "entryTime": 1700173023885, "exitTime": 1700173023896, "value": 11, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }, "children": [{ "name": "Common.copyArray(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) => int[] [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023887, "exitTime": 1700173023887, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int[]", "value": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" }], "return": { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                    , {
                        "name": "MergeSort.topDownMergeSort(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]", "method": "topDownMergeSort", "entryTime": 1700173023887, "exitTime": 1700173023896, "value": 9, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }, "children": [{ "name": "Common.copyArray(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) => int[] [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023887, "exitTime": 1700173023887, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int[]", "value": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" }], "return": { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                            , {
                                "name": "MergeSort.topDownSplitMerge(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 0, int = 15, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]", "method": "topDownSplitMerge", "entryTime": 1700173023887, "exitTime": 1700173023896, "value": 9, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "0" }, { "type": "int", "value": "15" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }, "children": [{
                                    "name": "MergeSort.topDownSplitMerge(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 0, int = 7, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownSplitMerge", "entryTime": 1700173023887, "exitTime": 1700173023890, "value": 3, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "0" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{
                                        "name": "MergeSort.topDownSplitMerge(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 0, int = 3, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownSplitMerge", "entryTime": 1700173023887, "exitTime": 1700173023888, "value": 1, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "0" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.topDownSplitMerge(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 0, int = 1, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023887, "exitTime": 1700173023887, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                            , {
                                                "name": "MergeSort.topDownSplitMerge(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 1, int = 3, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownSplitMerge", "entryTime": 1700173023887, "exitTime": 1700173023888, "value": 1, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.topDownSplitMerge(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 1, int = 2, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023887, "exitTime": 1700173023887, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                    , { "name": "MergeSort.topDownSplitMerge(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 2, int = 3, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023887, "exitTime": 1700173023887, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                    , {
                                                        "name": "MergeSort.topDownMerge(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 1, int = 2, int = 3, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownMerge", "entryTime": 1700173023887, "exitTime": 1700173023888, "value": 1, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 14, int = 7) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "7" }], "return": { "type": "Boolean", "value": "false" } }
                                                            , { "name": "MergeSort.copyToResult(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 1, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 2) => int[] [10, 7, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "2" }], "return": { "type": "int[]", "value": "[10, 7, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                            , { "name": "Common.copyArray(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 1, int[] = [10, 7, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 2, int = 1) => int[] [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[10, 7, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                        ]
                                                }
                                                ]
                                        }
                                            , {
                                                "name": "MergeSort.topDownMerge(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 0, int = 1, int = 3, int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownMerge", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 10, int = 7) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "7" }], "return": { "type": "Boolean", "value": "false" } }
                                                    , { "name": "MergeSort.copyToResult(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 0, int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 1) => int[] [7, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "0" }, { "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[7, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                    , { "name": "MergeSort.isLeftSmallerOrEquals(int = 10, int = 14) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "14" }], "return": { "type": "Boolean", "value": "true" } }
                                                    , { "name": "MergeSort.copyToResult(int[] = [7, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 1, int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 0) => int[] [7, 10, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "0" }], "return": { "type": "int[]", "value": "[7, 10, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                    , { "name": "Common.copyArray(int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 2, int[] = [7, 10, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 2, int = 1) => int[] [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "2" }, { "type": "int[]", "value": "[7, 10, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                ]
                                        }
                                        ]
                                    }
                                        , {
                                            "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 3, int = 7, int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownSplitMerge", "entryTime": 1700173023888, "exitTime": 1700173023890, "value": 2, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "3" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{
                                                "name": "MergeSort.topDownSplitMerge(int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 3, int = 5, int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownSplitMerge", "entryTime": 1700173023888, "exitTime": 1700173023889, "value": 1, "arguments": [{ "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "3" }, { "type": "int", "value": "5" }, { "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 3, int = 4, int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                    , { "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 4, int = 5, int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                    , {
                                                        "name": "MergeSort.topDownMerge(int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 3, int = 4, int = 5, int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownMerge", "entryTime": 1700173023888, "exitTime": 1700173023889, "value": 1, "arguments": [{ "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 11, int = 8) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023888, "exitTime": 1700173023888, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "8" }], "return": { "type": "Boolean", "value": "false" } }
                                                            , { "name": "MergeSort.copyToResult(int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 3, int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 4) => int[] [10, 7, 14, 8, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "4" }], "return": { "type": "int[]", "value": "[10, 7, 14, 8, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                            , { "name": "Common.copyArray(int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 3, int[] = [10, 7, 14, 8, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 4, int = 1) => int[] [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[10, 7, 14, 8, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "4" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                        ]
                                                }
                                                ]
                                            }
                                                , {
                                                    "name": "MergeSort.topDownSplitMerge(int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 5, int = 7, int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownSplitMerge", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "5" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 5, int = 6, int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                        , { "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 6, int = 7, int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                        , {
                                                            "name": "MergeSort.topDownMerge(int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 5, int = 6, int = 7, int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownMerge", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 5, int = 15) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "15" }], "return": { "type": "Boolean", "value": "true" } }
                                                                , { "name": "MergeSort.copyToResult(int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 5, int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 5) => int[] [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "5" }, { "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "5" }], "return": { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                                , { "name": "Common.copyArray(int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 6, int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 6, int = 1) => int[] [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "6" }, { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "6" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                            ]
                                                    }
                                                    ]
                                            }
                                                , {
                                                    "name": "MergeSort.topDownMerge(int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 3, int = 5, int = 7, int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownMerge", "entryTime": 1700173023889, "exitTime": 1700173023890, "value": 1, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "3" }, { "type": "int", "value": "5" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 8, int = 5) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "5" }], "return": { "type": "Boolean", "value": "false" } }
                                                        , { "name": "MergeSort.copyToResult(int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 3, int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 5) => int[] [7, 10, 14, 5, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "5" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                        , { "name": "MergeSort.isLeftSmallerOrEquals(int = 8, int = 15) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "15" }], "return": { "type": "Boolean", "value": "true" } }
                                                        , { "name": "MergeSort.copyToResult(int[] = [7, 10, 14, 5, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 4, int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 3) => int[] [7, 10, 14, 5, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "4" }, { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "3" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                        , { "name": "MergeSort.isLeftSmallerOrEquals(int = 11, int = 15) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023889, "exitTime": 1700173023889, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "15" }], "return": { "type": "Boolean", "value": "true" } }
                                                        , { "name": "MergeSort.copyToResult(int[] = [7, 10, 14, 5, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 5, int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 4) => int[] [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "5" }, { "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "4" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                        , { "name": "Common.copyArray(int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 6, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 6, int = 1) => int[] [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "6" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "6" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                    ]
                                            }
                                            ]
                                    }
                                        , {
                                            "name": "MergeSort.topDownMerge(int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 0, int = 3, int = 7, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "topDownMerge", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "0" }, { "type": "int", "value": "3" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 7, int = 5) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "5" }], "return": { "type": "Boolean", "value": "false" } }
                                                , { "name": "MergeSort.copyToResult(int[] = [10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 0, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 3) => int[] [5, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "0" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "3" }], "return": { "type": "int[]", "value": "[5, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                , { "name": "MergeSort.isLeftSmallerOrEquals(int = 7, int = 8) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "8" }], "return": { "type": "Boolean", "value": "true" } }
                                                , { "name": "MergeSort.copyToResult(int[] = [5, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 1, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 0) => int[] [5, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "0" }], "return": { "type": "int[]", "value": "[5, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                , { "name": "MergeSort.isLeftSmallerOrEquals(int = 10, int = 8) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "8" }], "return": { "type": "Boolean", "value": "false" } }
                                                , { "name": "MergeSort.copyToResult(int[] = [5, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 2, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 4) => int[] [5, 7, 8, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 14, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "2" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "4" }], "return": { "type": "int[]", "value": "[5, 7, 8, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                , { "name": "MergeSort.isLeftSmallerOrEquals(int = 10, int = 11) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "11" }], "return": { "type": "Boolean", "value": "true" } }
                                                , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 3, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 1) => int[] [5, 7, 8, 10, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 8, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                , { "name": "MergeSort.isLeftSmallerOrEquals(int = 14, int = 11) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "11" }], "return": { "type": "Boolean", "value": "false" } }
                                                , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 4, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 5) => int[] [5, 7, 8, 10, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "4" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "5" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                , { "name": "MergeSort.isLeftSmallerOrEquals(int = 14, int = 15) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "15" }], "return": { "type": "Boolean", "value": "true" } }
                                                , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 5, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 2) => int[] [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "5" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "2" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                                , { "name": "Common.copyArray(int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 6, int[] = [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 6, int = 1) => int[] [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "6" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "6" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                                            ]
                                    }
                                    ]
                                }
                                    , {
                                        "name": "MergeSort.topDownSplitMerge(int[] = [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 7, int = 15, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]", "method": "topDownSplitMerge", "entryTime": 1700173023890, "exitTime": 1700173023894, "value": 4, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "7" }, { "type": "int", "value": "15" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, "children": [{
                                            "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 7, int = 11, int[] = [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]", "method": "topDownSplitMerge", "entryTime": 1700173023890, "exitTime": 1700173023891, "value": 1, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "7" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, "children": [{
                                                "name": "MergeSort.topDownSplitMerge(int[] = [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 7, int = 9, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]", "method": "topDownSplitMerge", "entryTime": 1700173023890, "exitTime": 1700173023891, "value": 1, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "7" }, { "type": "int", "value": "9" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 7, int = 8, int[] = [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                    , { "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 8, int = 9, int[] = [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                    , {
                                                        "name": "MergeSort.topDownMerge(int[] = [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 7, int = 8, int = 9, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]", "method": "topDownMerge", "entryTime": 1700173023890, "exitTime": 1700173023891, "value": 1, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 12, int = 1) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "1" }], "return": { "type": "Boolean", "value": "false" } }
                                                            , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 7, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 8) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023890, "exitTime": 1700173023890, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "8" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 1, 9, 3, 4, 2, 13, 6]" } }
                                                            , { "name": "Common.copyArray(int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 7, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 1, 9, 3, 4, 2, 13, 6], int = 8, int = 1) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "8" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]" } }
                                                        ]
                                                }
                                                ]
                                            }
                                                , {
                                                    "name": "MergeSort.topDownSplitMerge(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6], int = 9, int = 11, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]", "method": "topDownSplitMerge", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "9" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 9, int = 10, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                        , { "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 10, int = 11, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                        , {
                                                            "name": "MergeSort.topDownMerge(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6], int = 9, int = 10, int = 11, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]", "method": "topDownMerge", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 9, int = 3) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "false" } }
                                                                , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6], int = 9, int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 10) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "9" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "10" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 3, 4, 2, 13, 6]" } }
                                                                , { "name": "Common.copyArray(int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 9, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 3, 4, 2, 13, 6], int = 10, int = 1) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "9" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "10" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" } }
                                                            ]
                                                    }
                                                    ]
                                            }
                                                , {
                                                    "name": "MergeSort.topDownMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 7, int = 9, int = 11, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]) => int[] [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]", "method": "topDownMerge", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "7" }, { "type": "int", "value": "9" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 1, int = 3) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "true" } }
                                                        , { "name": "MergeSort.copyToResult(int[] = [7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6], int = 7, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6], int = 7) => int[] [7, 10, 14, 5, 8, 11, 15, 1, 1, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }, { "type": "int", "value": "7" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 1, 9, 3, 4, 2, 13, 6]" } }
                                                        , { "name": "MergeSort.isLeftSmallerOrEquals(int = 12, int = 3) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "false" } }
                                                        , { "name": "MergeSort.copyToResult(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 1, 9, 3, 4, 2, 13, 6], int = 8, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6], int = 9) => int[] [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "8" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }, { "type": "int", "value": "9" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 3, 4, 2, 13, 6]" } }
                                                        , { "name": "MergeSort.isLeftSmallerOrEquals(int = 12, int = 9) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "9" }], "return": { "type": "Boolean", "value": "false" } }
                                                        , { "name": "MergeSort.copyToResult(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 3, 4, 2, 13, 6], int = 9, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6], int = 10) => int[] [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 3, 4, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "9" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }, { "type": "int", "value": "10" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 3, 4, 2, 13, 6]" } }
                                                        , { "name": "Common.copyArray(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6], int = 8, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 3, 4, 2, 13, 6], int = 10, int = 1) => int[] [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }, { "type": "int", "value": "8" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 3, 4, 2, 13, 6]" }, { "type": "int", "value": "10" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" } }
                                                    ]
                                            }
                                            ]
                                        }
                                            , {
                                                "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6], int = 11, int = 15, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]) => int[] [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]", "method": "topDownSplitMerge", "entryTime": 1700173023891, "exitTime": 1700173023893, "value": 2, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, { "type": "int", "value": "11" }, { "type": "int", "value": "15" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, "children": [{
                                                    "name": "MergeSort.topDownSplitMerge(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6], int = 11, int = 13, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]", "method": "topDownSplitMerge", "entryTime": 1700173023891, "exitTime": 1700173023893, "value": 2, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }, { "type": "int", "value": "11" }, { "type": "int", "value": "13" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]" }, "children": [{ "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6], int = 11, int = 12, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                        , { "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6], int = 12, int = 13, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023891, "exitTime": 1700173023891, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                        , {
                                                            "name": "MergeSort.topDownMerge(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6], int = 11, int = 12, int = 13, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]", "method": "topDownMerge", "entryTime": 1700173023892, "exitTime": 1700173023893, "value": 1, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 4, int = 2) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023892, "exitTime": 1700173023892, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "false" } }
                                                                , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6], int = 11, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6], int = 12) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 4, 2, 13, 6]" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, { "type": "int", "value": "12" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 2, 13, 6]" } }
                                                                , { "name": "Common.copyArray(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6], int = 11, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 2, 13, 6], int = 12, int = 1) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]", "method": "copyArray", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 2, 13, 6]" }, { "type": "int", "value": "12" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]" } }
                                                            ]
                                                    }
                                                    ]
                                                }
                                                    , {
                                                        "name": "MergeSort.topDownSplitMerge(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6], int = 13, int = 15, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]", "method": "topDownSplitMerge", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]" }, { "type": "int", "value": "13" }, { "type": "int", "value": "15" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]" }, "children": [{ "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6], int = 13, int = 14, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                            , { "name": "MergeSort.topDownSplitMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6], int = 14, int = 15, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]) => void", "method": "topDownSplitMerge", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]" }], "return": { "type": "void", "value": "" } }
                                                            , {
                                                                "name": "MergeSort.topDownMerge(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6], int = 13, int = 14, int = 15, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]", "method": "topDownMerge", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 13, int = 6) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int", "value": "13" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "false" } }
                                                                    , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6], int = 13, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6], int = 14) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 6]", "method": "copyToResult", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 13, 6]" }, { "type": "int", "value": "13" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, { "type": "int", "value": "14" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 6]" } }
                                                                    , { "name": "Common.copyArray(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6], int = 13, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 6], int = 14, int = 1) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]", "method": "copyArray", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, { "type": "int", "value": "13" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 6]" }, { "type": "int", "value": "14" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]" } }
                                                                ]
                                                        }
                                                        ]
                                                }
                                                    , {
                                                        "name": "MergeSort.topDownMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6], int = 11, int = 13, int = 15, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]) => int[] [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]", "method": "topDownMerge", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, { "type": "int", "value": "11" }, { "type": "int", "value": "13" }, { "type": "int", "value": "15" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 2, int = 6) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                                            , { "name": "MergeSort.copyToResult(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6], int = 11, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13], int = 11) => int[] [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 2, 13, 6]", "method": "copyToResult", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 4, 2, 13, 6]" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]" }, { "type": "int", "value": "11" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 2, 13, 6]" } }
                                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 4, int = 6) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                                            , { "name": "MergeSort.copyToResult(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 2, 13, 6], int = 12, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13], int = 12) => int[] [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 13, 6]", "method": "copyToResult", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 2, 13, 6]" }, { "type": "int", "value": "12" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]" }, { "type": "int", "value": "12" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 13, 6]" } }
                                                            , { "name": "Common.copyArray(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13], int = 13, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 13, 6], int = 13, int = 2) => int[] [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]", "method": "copyArray", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]" }, { "type": "int", "value": "13" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 13, 6]" }, { "type": "int", "value": "13" }, { "type": "int", "value": "2" }], "return": { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" } }
                                                        ]
                                                }
                                                ]
                                        }
                                            , {
                                                "name": "MergeSort.topDownMerge(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13], int = 7, int = 11, int = 15, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]", "method": "topDownMerge", "entryTime": 1700173023893, "exitTime": 1700173023894, "value": 1, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]" }, { "type": "int", "value": "7" }, { "type": "int", "value": "11" }, { "type": "int", "value": "15" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 1, int = 2) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "true" } }
                                                    , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13], int = 7, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 7) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "7" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]" } }
                                                    , { "name": "MergeSort.isLeftSmallerOrEquals(int = 3, int = 2) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "false" } }
                                                    , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13], int = 8, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 11) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 9, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 12, 3, 9, 2, 4, 6, 13]" }, { "type": "int", "value": "8" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "11" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 9, 2, 4, 6, 13]" } }
                                                    , { "name": "MergeSort.isLeftSmallerOrEquals(int = 3, int = 4) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "true" } }
                                                    , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 9, 2, 4, 6, 13], int = 9, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 8) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 9, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023893, "exitTime": 1700173023893, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 9, 2, 4, 6, 13]" }, { "type": "int", "value": "9" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "8" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 9, 2, 4, 6, 13]" } }
                                                    , { "name": "MergeSort.isLeftSmallerOrEquals(int = 9, int = 4) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023894, "exitTime": 1700173023894, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "false" } }
                                                    , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 9, 2, 4, 6, 13], int = 10, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 12) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023894, "exitTime": 1700173023894, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 9, 2, 4, 6, 13]" }, { "type": "int", "value": "10" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "12" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 2, 4, 6, 13]" } }
                                                    , { "name": "MergeSort.isLeftSmallerOrEquals(int = 9, int = 6) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023894, "exitTime": 1700173023894, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "false" } }
                                                    , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 2, 4, 6, 13], int = 11, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 13) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023894, "exitTime": 1700173023894, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 2, 4, 6, 13]" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "13" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 4, 6, 13]" } }
                                                    , { "name": "MergeSort.isLeftSmallerOrEquals(int = 9, int = 13) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023894, "exitTime": 1700173023894, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int", "value": "13" }], "return": { "type": "Boolean", "value": "true" } }
                                                    , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 4, 6, 13], int = 12, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 9) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 6, 13]", "method": "copyToResult", "entryTime": 1700173023894, "exitTime": 1700173023894, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 4, 6, 13]" }, { "type": "int", "value": "12" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "9" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 6, 13]" } }
                                                    , { "name": "MergeSort.isLeftSmallerOrEquals(int = 12, int = 13) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023894, "exitTime": 1700173023894, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int", "value": "13" }], "return": { "type": "Boolean", "value": "true" } }
                                                    , { "name": "MergeSort.copyToResult(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 6, 13], int = 13, int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 10) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]", "method": "copyToResult", "entryTime": 1700173023894, "exitTime": 1700173023894, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 6, 13]" }, { "type": "int", "value": "13" }, { "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "10" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" } }
                                                    , { "name": "Common.copyArray(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 14, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 14, int = 1) => int[] [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]", "method": "copyArray", "entryTime": 1700173023894, "exitTime": 1700173023894, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "14" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "14" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" } }
                                                ]
                                        }
                                        ]
                                }
                                    , {
                                        "name": "MergeSort.topDownMerge(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 0, int = 7, int = 15, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]", "method": "topDownMerge", "entryTime": 1700173023894, "exitTime": 1700173023896, "value": 2, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "0" }, { "type": "int", "value": "7" }, { "type": "int", "value": "15" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }, "children": [{ "name": "MergeSort.isLeftSmallerOrEquals(int = 5, int = 1) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023894, "exitTime": 1700173023894, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }], "return": { "type": "Boolean", "value": "false" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 0, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 7) => int[] [1, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023894, "exitTime": 1700173023894, "value": 0, "arguments": [{ "type": "int[]", "value": "[7, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "0" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "7" }], "return": { "type": "int[]", "value": "[1, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 5, int = 2) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }], "return": { "type": "Boolean", "value": "false" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 1, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 8) => int[] [1, 2, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 10, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "1" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "8" }], "return": { "type": "int[]", "value": "[1, 2, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 5, int = 3) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "3" }], "return": { "type": "Boolean", "value": "false" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 2, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 2, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 9) => int[] [1, 2, 3, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 14, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "2" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "9" }], "return": { "type": "int[]", "value": "[1, 2, 3, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 5, int = 4) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "4" }], "return": { "type": "Boolean", "value": "false" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 2, 3, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 3, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 10) => int[] [1, 2, 3, 4, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 5, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "3" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "10" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 5, int = 6) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "true" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 2, 3, 4, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 4, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 0) => int[] [1, 2, 3, 4, 5, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 8, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "4" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "0" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 7, int = 6) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "6" }], "return": { "type": "Boolean", "value": "false" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 2, 3, 4, 5, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 5, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 11) => int[] [1, 2, 3, 4, 5, 6, 15, 1, 3, 9, 12, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 11, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "5" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "11" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 15, 1, 3, 9, 12, 2, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 7, int = 9) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int", "value": "9" }], "return": { "type": "Boolean", "value": "true" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 2, 3, 4, 5, 6, 15, 1, 3, 9, 12, 2, 4, 6, 13], int = 6, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 1) => int[] [1, 2, 3, 4, 5, 6, 7, 1, 3, 9, 12, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 15, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "6" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "1" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 1, 3, 9, 12, 2, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 8, int = 9) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int", "value": "9" }], "return": { "type": "Boolean", "value": "true" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 2, 3, 4, 5, 6, 7, 1, 3, 9, 12, 2, 4, 6, 13], int = 7, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 2) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 3, 9, 12, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 1, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "7" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "2" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 3, 9, 12, 2, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 10, int = 9) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "9" }], "return": { "type": "Boolean", "value": "false" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 2, 3, 4, 5, 6, 7, 8, 3, 9, 12, 2, 4, 6, 13], int = 8, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 12) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 12, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 3, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "8" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "12" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 12, 2, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 10, int = 12) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023895, "exitTime": 1700173023895, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int", "value": "12" }], "return": { "type": "Boolean", "value": "true" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 12, 2, 4, 6, 13], int = 9, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 3) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023896, "exitTime": 1700173023896, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "9" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "3" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 2, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 11, int = 12) => Boolean true", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023896, "exitTime": 1700173023896, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int", "value": "12" }], "return": { "type": "Boolean", "value": "true" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 2, 4, 6, 13], int = 10, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 4) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023896, "exitTime": 1700173023896, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 2, 4, 6, 13]" }, { "type": "int", "value": "10" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "4" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 14, int = 12) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023896, "exitTime": 1700173023896, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "12" }], "return": { "type": "Boolean", "value": "false" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2, 4, 6, 13], int = 11, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 13) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 6, 13]", "method": "copyToResult", "entryTime": 1700173023896, "exitTime": 1700173023896, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2, 4, 6, 13]" }, { "type": "int", "value": "11" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "13" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 6, 13]" } }
                                            , { "name": "MergeSort.isLeftSmallerOrEquals(int = 14, int = 13) => Boolean false", "method": "isLeftSmallerOrEquals", "entryTime": 1700173023896, "exitTime": 1700173023896, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int", "value": "13" }], "return": { "type": "Boolean", "value": "false" } }
                                            , { "name": "MergeSort.copyToResult(int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 6, 13], int = 12, int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 14) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 6, 13]", "method": "copyToResult", "entryTime": 1700173023896, "exitTime": 1700173023896, "value": 0, "arguments": [{ "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 6, 13]" }, { "type": "int", "value": "12" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "14" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 6, 13]" } }
                                            , { "name": "Common.copyArray(int[] = [5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13], int = 5, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 6, 13], int = 13, int = 2) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]", "method": "copyArray", "entryTime": 1700173023896, "exitTime": 1700173023896, "value": 0, "arguments": [{ "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 1, 2, 3, 4, 6, 9, 12, 13]" }, { "type": "int", "value": "5" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 6, 13]" }, { "type": "int", "value": "13" }, { "type": "int", "value": "2" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" } }
                                        ]
                                }
                                ]
                        }
                        ]
                }
                ]
            }
            ]
        }
    }, {
        "thread": "InsertionSort", "snapshotTime": 1700173024023, "span": {
            "name": "InsertionSortRoot", "method": "InsertionSortRoot", "entryTime": 1700173023901, "exitTime": -1, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "children": [{
                "name": "InsertionSort.sort(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => int[] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]", "method": "sort", "entryTime": 1700173023901, "exitTime": 1700173023905, "value": 4, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }, "children": [{ "name": "Common.copyArray(int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6], int[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) => int[] [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]", "method": "copyArray", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }, { "type": "int[]", "value": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]" }], "return": { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 1, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 1) => Integer 2", "method": "moveHeadCursorUp", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "1" }], "return": { "type": "Integer", "value": "2" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 2, int[] = [10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[10, 14, 7, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 2) => Integer 1", "method": "movePushForwardCursorDown", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "2" }], "return": { "type": "Integer", "value": "1" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 1, int[] = [10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[10, 7, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 1) => Integer 0", "method": "movePushForwardCursorDown", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "1" }], "return": { "type": "Integer", "value": "0" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 0, int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 2) => Integer 3", "method": "moveHeadCursorUp", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "2" }], "return": { "type": "Integer", "value": "3" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 3, int[] = [7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[7, 10, 14, 11, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 3) => Integer 2", "method": "movePushForwardCursorDown", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "3" }], "return": { "type": "Integer", "value": "2" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 2, int[] = [7, 10, 11, 14, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[7, 10, 11, 14, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 3) => Integer 4", "method": "moveHeadCursorUp", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "3" }], "return": { "type": "Integer", "value": "4" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 4, int[] = [7, 10, 11, 14, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[7, 10, 11, 14, 8, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 4) => Integer 3", "method": "movePushForwardCursorDown", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "4" }], "return": { "type": "Integer", "value": "3" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 3, int[] = [7, 10, 11, 8, 14, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[7, 10, 11, 8, 14, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 3) => Integer 2", "method": "movePushForwardCursorDown", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "3" }], "return": { "type": "Integer", "value": "2" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 2, int[] = [7, 10, 8, 11, 14, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[7, 10, 8, 11, 14, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 2) => Integer 1", "method": "movePushForwardCursorDown", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "2" }], "return": { "type": "Integer", "value": "1" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 1, int[] = [7, 8, 10, 11, 14, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[7, 8, 10, 11, 14, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 4) => Integer 5", "method": "moveHeadCursorUp", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "4" }], "return": { "type": "Integer", "value": "5" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 5, int[] = [7, 8, 10, 11, 14, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[7, 8, 10, 11, 14, 5, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 5) => Integer 4", "method": "movePushForwardCursorDown", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "5" }], "return": { "type": "Integer", "value": "4" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 4, int[] = [7, 8, 10, 11, 5, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023901, "exitTime": 1700173023901, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[7, 8, 10, 11, 5, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 4) => Integer 3", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "4" }], "return": { "type": "Integer", "value": "3" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 3, int[] = [7, 8, 10, 5, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[7, 8, 10, 5, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 3) => Integer 2", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "3" }], "return": { "type": "Integer", "value": "2" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 2, int[] = [7, 8, 5, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[7, 8, 5, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 2) => Integer 1", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "2" }], "return": { "type": "Integer", "value": "1" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 1, int[] = [7, 5, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[7, 5, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 1) => Integer 0", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "1" }], "return": { "type": "Integer", "value": "0" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 0, int[] = [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 5) => Integer 6", "method": "moveHeadCursorUp", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "5" }], "return": { "type": "Integer", "value": "6" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 6, int[] = [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 6) => Integer 7", "method": "moveHeadCursorUp", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "6" }], "return": { "type": "Integer", "value": "7" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 7, int[] = [5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 15, 12, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 7) => Integer 6", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "7" }], "return": { "type": "Integer", "value": "6" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 6, int[] = [5, 7, 8, 10, 11, 14, 12, 15, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 14, 12, 15, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 6) => Integer 5", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "6" }], "return": { "type": "Integer", "value": "5" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 5, int[] = [5, 7, 8, 10, 11, 12, 14, 15, 1, 9, 3, 4, 2, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 12, 14, 15, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 7) => Integer 8", "method": "moveHeadCursorUp", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "7" }], "return": { "type": "Integer", "value": "8" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 8, int[] = [5, 7, 8, 10, 11, 12, 14, 15, 1, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 12, 14, 15, 1, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 8) => Integer 7", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "8" }], "return": { "type": "Integer", "value": "7" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 7, int[] = [5, 7, 8, 10, 11, 12, 14, 1, 15, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 12, 14, 1, 15, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 7) => Integer 6", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "7" }], "return": { "type": "Integer", "value": "6" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 6, int[] = [5, 7, 8, 10, 11, 12, 1, 14, 15, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 12, 1, 14, 15, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 6) => Integer 5", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "6" }], "return": { "type": "Integer", "value": "5" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 5, int[] = [5, 7, 8, 10, 11, 1, 12, 14, 15, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[5, 7, 8, 10, 11, 1, 12, 14, 15, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 5) => Integer 4", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "5" }], "return": { "type": "Integer", "value": "4" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 4, int[] = [5, 7, 8, 10, 1, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[5, 7, 8, 10, 1, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 4) => Integer 3", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "4" }], "return": { "type": "Integer", "value": "3" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 3, int[] = [5, 7, 8, 1, 10, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[5, 7, 8, 1, 10, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 3) => Integer 2", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "3" }], "return": { "type": "Integer", "value": "2" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 2, int[] = [5, 7, 1, 8, 10, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[5, 7, 1, 8, 10, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 2) => Integer 1", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "2" }], "return": { "type": "Integer", "value": "1" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 1, int[] = [5, 1, 7, 8, 10, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[5, 1, 7, 8, 10, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 1) => Integer 0", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "1" }], "return": { "type": "Integer", "value": "0" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 0, int[] = [1, 5, 7, 8, 10, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "0" }, { "type": "int[]", "value": "[1, 5, 7, 8, 10, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 8) => Integer 9", "method": "moveHeadCursorUp", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "8" }], "return": { "type": "Integer", "value": "9" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 9, int[] = [1, 5, 7, 8, 10, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[1, 5, 7, 8, 10, 11, 12, 14, 15, 9, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 9) => Integer 8", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "9" }], "return": { "type": "Integer", "value": "8" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 8, int[] = [1, 5, 7, 8, 10, 11, 12, 14, 9, 15, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[1, 5, 7, 8, 10, 11, 12, 14, 9, 15, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 8) => Integer 7", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "8" }], "return": { "type": "Integer", "value": "7" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 7, int[] = [1, 5, 7, 8, 10, 11, 12, 9, 14, 15, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[1, 5, 7, 8, 10, 11, 12, 9, 14, 15, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 7) => Integer 6", "method": "movePushForwardCursorDown", "entryTime": 1700173023902, "exitTime": 1700173023902, "value": 0, "arguments": [{ "type": "int", "value": "7" }], "return": { "type": "Integer", "value": "6" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 6, int[] = [1, 5, 7, 8, 10, 11, 9, 12, 14, 15, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[1, 5, 7, 8, 10, 11, 9, 12, 14, 15, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 6) => Integer 5", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "6" }], "return": { "type": "Integer", "value": "5" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 5, int[] = [1, 5, 7, 8, 10, 9, 11, 12, 14, 15, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[1, 5, 7, 8, 10, 9, 11, 12, 14, 15, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 5) => Integer 4", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "5" }], "return": { "type": "Integer", "value": "4" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 4, int[] = [1, 5, 7, 8, 9, 10, 11, 12, 14, 15, 3, 4, 2, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[1, 5, 7, 8, 9, 10, 11, 12, 14, 15, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 9) => Integer 10", "method": "moveHeadCursorUp", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "9" }], "return": { "type": "Integer", "value": "10" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 10, int[] = [1, 5, 7, 8, 9, 10, 11, 12, 14, 15, 3, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int[]", "value": "[1, 5, 7, 8, 9, 10, 11, 12, 14, 15, 3, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 10) => Integer 9", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "10" }], "return": { "type": "Integer", "value": "9" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 9, int[] = [1, 5, 7, 8, 9, 10, 11, 12, 14, 3, 15, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[1, 5, 7, 8, 9, 10, 11, 12, 14, 3, 15, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 9) => Integer 8", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "9" }], "return": { "type": "Integer", "value": "8" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 8, int[] = [1, 5, 7, 8, 9, 10, 11, 12, 3, 14, 15, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[1, 5, 7, 8, 9, 10, 11, 12, 3, 14, 15, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 8) => Integer 7", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "8" }], "return": { "type": "Integer", "value": "7" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 7, int[] = [1, 5, 7, 8, 9, 10, 11, 3, 12, 14, 15, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[1, 5, 7, 8, 9, 10, 11, 3, 12, 14, 15, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 7) => Integer 6", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "7" }], "return": { "type": "Integer", "value": "6" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 6, int[] = [1, 5, 7, 8, 9, 10, 3, 11, 12, 14, 15, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[1, 5, 7, 8, 9, 10, 3, 11, 12, 14, 15, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 6) => Integer 5", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "6" }], "return": { "type": "Integer", "value": "5" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 5, int[] = [1, 5, 7, 8, 9, 3, 10, 11, 12, 14, 15, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[1, 5, 7, 8, 9, 3, 10, 11, 12, 14, 15, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 5) => Integer 4", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "5" }], "return": { "type": "Integer", "value": "4" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 4, int[] = [1, 5, 7, 8, 3, 9, 10, 11, 12, 14, 15, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[1, 5, 7, 8, 3, 9, 10, 11, 12, 14, 15, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 4) => Integer 3", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "4" }], "return": { "type": "Integer", "value": "3" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 3, int[] = [1, 5, 7, 3, 8, 9, 10, 11, 12, 14, 15, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[1, 5, 7, 3, 8, 9, 10, 11, 12, 14, 15, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 3) => Integer 2", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "3" }], "return": { "type": "Integer", "value": "2" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 2, int[] = [1, 5, 3, 7, 8, 9, 10, 11, 12, 14, 15, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[1, 5, 3, 7, 8, 9, 10, 11, 12, 14, 15, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 2) => Integer 1", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "2" }], "return": { "type": "Integer", "value": "1" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 1, int[] = [1, 3, 5, 7, 8, 9, 10, 11, 12, 14, 15, 4, 2, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[1, 3, 5, 7, 8, 9, 10, 11, 12, 14, 15, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 10) => Integer 11", "method": "moveHeadCursorUp", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "10" }], "return": { "type": "Integer", "value": "11" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 11, int[] = [1, 3, 5, 7, 8, 9, 10, 11, 12, 14, 15, 4, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int[]", "value": "[1, 3, 5, 7, 8, 9, 10, 11, 12, 14, 15, 4, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 11) => Integer 10", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "11" }], "return": { "type": "Integer", "value": "10" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 10, int[] = [1, 3, 5, 7, 8, 9, 10, 11, 12, 14, 4, 15, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int[]", "value": "[1, 3, 5, 7, 8, 9, 10, 11, 12, 14, 4, 15, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 10) => Integer 9", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "10" }], "return": { "type": "Integer", "value": "9" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 9, int[] = [1, 3, 5, 7, 8, 9, 10, 11, 12, 4, 14, 15, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[1, 3, 5, 7, 8, 9, 10, 11, 12, 4, 14, 15, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 9) => Integer 8", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "9" }], "return": { "type": "Integer", "value": "8" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 8, int[] = [1, 3, 5, 7, 8, 9, 10, 11, 4, 12, 14, 15, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[1, 3, 5, 7, 8, 9, 10, 11, 4, 12, 14, 15, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 8) => Integer 7", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "8" }], "return": { "type": "Integer", "value": "7" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 7, int[] = [1, 3, 5, 7, 8, 9, 10, 4, 11, 12, 14, 15, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[1, 3, 5, 7, 8, 9, 10, 4, 11, 12, 14, 15, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 7) => Integer 6", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "7" }], "return": { "type": "Integer", "value": "6" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 6, int[] = [1, 3, 5, 7, 8, 9, 4, 10, 11, 12, 14, 15, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[1, 3, 5, 7, 8, 9, 4, 10, 11, 12, 14, 15, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 6) => Integer 5", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "6" }], "return": { "type": "Integer", "value": "5" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 5, int[] = [1, 3, 5, 7, 8, 4, 9, 10, 11, 12, 14, 15, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[1, 3, 5, 7, 8, 4, 9, 10, 11, 12, 14, 15, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 5) => Integer 4", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "5" }], "return": { "type": "Integer", "value": "4" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 4, int[] = [1, 3, 5, 7, 4, 8, 9, 10, 11, 12, 14, 15, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[1, 3, 5, 7, 4, 8, 9, 10, 11, 12, 14, 15, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 4) => Integer 3", "method": "movePushForwardCursorDown", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "4" }], "return": { "type": "Integer", "value": "3" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 3, int[] = [1, 3, 5, 4, 7, 8, 9, 10, 11, 12, 14, 15, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023903, "exitTime": 1700173023903, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[1, 3, 5, 4, 7, 8, 9, 10, 11, 12, 14, 15, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 3) => Integer 2", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "3" }], "return": { "type": "Integer", "value": "2" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 2, int[] = [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 2, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 11) => Integer 12", "method": "moveHeadCursorUp", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "11" }], "return": { "type": "Integer", "value": "12" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 12, int[] = [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 2, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int[]", "value": "[1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 2, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 12) => Integer 11", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "12" }], "return": { "type": "Integer", "value": "11" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 11, int[] = [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 2, 15, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int[]", "value": "[1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 2, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 11) => Integer 10", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "11" }], "return": { "type": "Integer", "value": "10" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 10, int[] = [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 2, 14, 15, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int[]", "value": "[1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 2, 14, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 10) => Integer 9", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "10" }], "return": { "type": "Integer", "value": "9" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 9, int[] = [1, 3, 4, 5, 7, 8, 9, 10, 11, 2, 12, 14, 15, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[1, 3, 4, 5, 7, 8, 9, 10, 11, 2, 12, 14, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 9) => Integer 8", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "9" }], "return": { "type": "Integer", "value": "8" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 8, int[] = [1, 3, 4, 5, 7, 8, 9, 10, 2, 11, 12, 14, 15, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[1, 3, 4, 5, 7, 8, 9, 10, 2, 11, 12, 14, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 8) => Integer 7", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "8" }], "return": { "type": "Integer", "value": "7" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 7, int[] = [1, 3, 4, 5, 7, 8, 9, 2, 10, 11, 12, 14, 15, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[1, 3, 4, 5, 7, 8, 9, 2, 10, 11, 12, 14, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 7) => Integer 6", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "7" }], "return": { "type": "Integer", "value": "6" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 6, int[] = [1, 3, 4, 5, 7, 8, 2, 9, 10, 11, 12, 14, 15, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[1, 3, 4, 5, 7, 8, 2, 9, 10, 11, 12, 14, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 6) => Integer 5", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "6" }], "return": { "type": "Integer", "value": "5" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 5, int[] = [1, 3, 4, 5, 7, 2, 8, 9, 10, 11, 12, 14, 15, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[1, 3, 4, 5, 7, 2, 8, 9, 10, 11, 12, 14, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 5) => Integer 4", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "5" }], "return": { "type": "Integer", "value": "4" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 4, int[] = [1, 3, 4, 5, 2, 7, 8, 9, 10, 11, 12, 14, 15, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "4" }, { "type": "int[]", "value": "[1, 3, 4, 5, 2, 7, 8, 9, 10, 11, 12, 14, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 4) => Integer 3", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "4" }], "return": { "type": "Integer", "value": "3" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 3, int[] = [1, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 14, 15, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "3" }, { "type": "int[]", "value": "[1, 3, 4, 2, 5, 7, 8, 9, 10, 11, 12, 14, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 3) => Integer 2", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "3" }], "return": { "type": "Integer", "value": "2" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 2, int[] = [1, 3, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "2" }, { "type": "int[]", "value": "[1, 3, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 2) => Integer 1", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "2" }], "return": { "type": "Integer", "value": "1" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 1, int[] = [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 13, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "1" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 12) => Integer 13", "method": "moveHeadCursorUp", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "12" }], "return": { "type": "Integer", "value": "13" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 13, int[] = [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 13, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "13" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 13, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 13) => Integer 12", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "13" }], "return": { "type": "Integer", "value": "12" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 12, int[] = [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 13, 15, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 13, 15, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 12) => Integer 11", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "12" }], "return": { "type": "Integer", "value": "11" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 11, int[] = [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 13) => Integer 14", "method": "moveHeadCursorUp", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "13" }], "return": { "type": "Integer", "value": "14" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 14, int[] = [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "14" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 14) => Integer 13", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "14" }], "return": { "type": "Integer", "value": "13" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 13, int[] = [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 6, 15]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "13" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 6, 15]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 13) => Integer 12", "method": "movePushForwardCursorDown", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "13" }], "return": { "type": "Integer", "value": "12" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 12, int[] = [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 6, 14, 15]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023904, "exitTime": 1700173023904, "value": 0, "arguments": [{ "type": "int", "value": "12" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 6, 14, 15]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 12) => Integer 11", "method": "movePushForwardCursorDown", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "12" }], "return": { "type": "Integer", "value": "11" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 11, int[] = [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 6, 13, 14, 15]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "11" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 6, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 11) => Integer 10", "method": "movePushForwardCursorDown", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "11" }], "return": { "type": "Integer", "value": "10" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 10, int[] = [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 6, 12, 13, 14, 15]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "10" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 6, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 10) => Integer 9", "method": "movePushForwardCursorDown", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "10" }], "return": { "type": "Integer", "value": "9" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 9, int[] = [1, 2, 3, 4, 5, 7, 8, 9, 10, 6, 11, 12, 13, 14, 15]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "9" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 9, 10, 6, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 9) => Integer 8", "method": "movePushForwardCursorDown", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "9" }], "return": { "type": "Integer", "value": "8" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 8, int[] = [1, 2, 3, 4, 5, 7, 8, 9, 6, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "8" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 9, 6, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 8) => Integer 7", "method": "movePushForwardCursorDown", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "8" }], "return": { "type": "Integer", "value": "7" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 7, int[] = [1, 2, 3, 4, 5, 7, 8, 6, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "7" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 8, 6, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 7) => Integer 6", "method": "movePushForwardCursorDown", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "7" }], "return": { "type": "Integer", "value": "6" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 6, int[] = [1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean true", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "6" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "true" } }
                    , { "name": "InsertionSort.movePushForwardCursorDown(int = 6) => Integer 5", "method": "movePushForwardCursorDown", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "6" }], "return": { "type": "Integer", "value": "5" } }
                    , { "name": "InsertionSort.valueAtPushForwardCursorIsUnordered(int = 5, int[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) => Boolean false", "method": "valueAtPushForwardCursorIsUnordered", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "5" }, { "type": "int[]", "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]" }], "return": { "type": "Boolean", "value": "false" } }
                    , { "name": "InsertionSort.moveHeadCursorUp(int = 14) => Integer 15", "method": "moveHeadCursorUp", "entryTime": 1700173023905, "exitTime": 1700173023905, "value": 0, "arguments": [{ "type": "int", "value": "14" }], "return": { "type": "Integer", "value": "15" } }
                ]
            }
            ]
        }
    }
],
];